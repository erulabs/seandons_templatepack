#
# Cookbook Name:: |{ cookbook['name'] }|
# Recipe :: |{ options['name'] }|
#
# Copyright |{ cookbook['year'] }|, Rackspace
#

# # Default to assuming our server is a 1gb slice
system_total_mem_mb = '1024'
# If we have more information than that, get the systems total memory in MB
unless node['memory']['total'].nil?
  system_total_mem_mb = (node['memory']['total'].gsub(/kB/, '').to_i / 1024).round
end
# By default, we'll use one 3rd of it for Redis - adjust according to your needs
node.default['redisio']['default_settings']['maxmemory'] = "#{(system_total_mem_mb / 3).round}M"

# Consider using "rackspace_networks" stencil for easy networking magic :)
if node['address_map'].nil?
  # Use servicenet by default - NOT RECOMMENED - flip to false and make use of a cloud network
  # see "rackspace_networks" for more.
  iface = 'eth1'
  node.default['address_map']['service_net_iface'] = iface
  listen_address = node['network']['interfaces'][iface]['addresses'].find do |addr, addr_info|
    addr_info[:family] == 'inet'
  end
  node.default['redisio']['default_settings']['address'] = listen_address.first
else
  node.default['redisio']['default_settings']['address'] = node['address_map']['my_ip']
end

{% if options['cache'] == 'true' %}
node.default['redisio']['default_settings']['maxmemorypolicy'] = 'allkeys-lru'
node.default['redisio']['default_settings']['save'] = nil
{% endif %}

node.default['redisio']['servers'] = [
  {
    name: 'pool0',
    port: 6379
  }
]
{% if options['cache'] == 'true' %}
node.default['redisio']['servers'][0]['save'] = nil
{% endif %}

include_recipe 'redisio'
include_recipe 'redisio::enable'

# End redis recipe
